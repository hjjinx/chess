{"version":3,"sources":["Box.js","Grid.js","Main.js","serviceWorker.js","index.js"],"names":["Box","handleClick","currTurn","_this","props","ownColor","id","boxId","split","i","parseInt","j","unitAtPosition","units","isHighlighted","highlighted","boxSelected","moveUnit","socket","emit","prevX","prevY","x","y","roomID","handleSelect","classes","this","value","color","react_default","a","createElement","className","onClick","Component","Grid","boxArr","push","src_Box","key","style","width","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","registerSocketListeners","on","data","setState","unHighlightAll","won","state","alert","document","location","href","message","newGame","unHighlightAllExcept","newArr","Array","fill","map","highlightedClone","arrayClone","length","shift","unit","pawn","rook","knight","bishop","queen","king","unitsClone","unitOnBox","turn","left","right","r","console","log","match","params","name","password","prompt","axios","post","confirmation","canJoin","src_Grid","arr","JSON","parse","stringify","withRouter","Boolean","window","hostname","Index","rooms","interval","io","generateRoom","_callee","res","regenerator_default","wrap","_context","prev","next","sent","concat","stop","handleChange","e","defineProperty","target","joinRoom","room","roomId","_this2","_this3","tableList","_loop","players","player1","player2","passwordProtected","react_router_dom","react_router","exact","path","textAlign","marginBottom","margin","type","onChange","align","border","src_Main","React","ReactDOM","render","src_Index","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7b56c48.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Box extends Component {\r\n  handleClick = () => {\r\n    const currTurn = this.props.currTurn;\r\n    const { ownColor } = this.props;\r\n    if (currTurn != this.props.ownColor) return;\r\n\r\n    const id = this.props.boxId.split(\"\");\r\n    const i = parseInt(id[0]);\r\n    const j = parseInt(id[1]);\r\n    const unitAtPosition = this.props.units[i][j];\r\n    const isHighlighted = this.props.highlighted;\r\n\r\n    const boxSelected = this.props.boxSelected;\r\n\r\n    // If the box recently selected is a position that a currently selected unit can move to, then move.\r\n    if (isHighlighted[i][j] === true) {\r\n      this.props.moveUnit(i, j);\r\n      this.props.socket.emit(\"move\", {\r\n        prevX: boxSelected[1][0],\r\n        prevY: boxSelected[1][1],\r\n        x: i,\r\n        y: j,\r\n        roomID: this.props.roomID\r\n      });\r\n    } else if (\r\n      unitAtPosition !== null && // If a unit is present at the selected position\r\n      unitAtPosition.split(\"_\")[0] == ownColor // If the color of the unit selected is the same of the player\r\n    )\r\n      this.props.handleSelect(i, j);\r\n  };\r\n\r\n  render() {\r\n    let classes = \"box\"; // Adding the name of the unit to the classes.\r\n    //Alternating black and white boxes\r\n    const boxId = this.props.boxId.split(\"\");\r\n    const i = parseInt(boxId[0]);\r\n    const j = parseInt(boxId[1]);\r\n    if ((i + j) % 2 === 0) {\r\n      classes += \" white\";\r\n    } else classes += \" black\";\r\n    // Alternating boxes ends here.\r\n\r\n    const value = this.props.units[i][j];\r\n    if (value !== null) {\r\n      var color = value.split(\"_\")[0]; //Color can be \"B\" or \"W\".\r\n      classes += \" \" + color;\r\n      const unit = value.split(\"_\")[1]; // unit is Bishop or Pawn or Queen..\r\n      classes += \" \" + unit;\r\n    }\r\n\r\n    if (this.props.highlighted[i][j]) {\r\n      // Checking if the box to be highlighted is friend or foe.\r\n      const currTurn = this.props.currTurn;\r\n      if (color === \"W\" && currTurn === \"B\") classes += \" highlightedKill\";\r\n      else if (color === \"B\" && currTurn === \"W\") classes += \" highlightedKill\";\r\n      else classes += \" highlighted\";\r\n      // If current turn matches the color of unit, it is friend.\r\n    }\r\n    return <div className={classes} onClick={this.handleClick} />;\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\nimport Box from \"./Box.js\";\r\n\r\nclass Grid extends Component {\r\n  render() {\r\n    const turn = this.props.currTurn;\r\n    let classes = \"grid \";\r\n    classes += turn;\r\n    let boxArr = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      boxArr.push([]);\r\n      for (let j = 0; j < 8; j++) {\r\n        let boxId = i + \"\" + j;\r\n        boxArr[i].push(\r\n          <Box\r\n            units={this.props.units}\r\n            currTurn={this.props.currTurn}\r\n            key={boxId}\r\n            boxId={boxId}\r\n            handleSelect={this.props.handleSelect}\r\n            highlighted={this.props.highlighted}\r\n            moveUnit={this.props.moveUnit}\r\n            ownColor={this.props.ownColor}\r\n            boxSelected={this.props.boxSelected}\r\n            socket={this.props.socket}\r\n            roomID={this.props.roomID}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className={classes} style={{ width: 720 }}>\r\n        {boxArr}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Grid from \"./Grid.js\";\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      roomID: \"\",\r\n      units: Array(8)\r\n        .fill()\r\n        .map(() => Array(8).fill(null)),\r\n      highlighted: Array(8)\r\n        .fill()\r\n        .map(() => Array(8).fill(false)),\r\n      currTurn: \"W\",\r\n      ownColor: \"\",\r\n      boxSelected: [] // Basically a Queue to keep track of previous 2 boxes clicked.\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    const roomID = this.props.match.params.id;\r\n    this.setState({ roomID });\r\n    console.log(this.props.name);\r\n\r\n    const password = prompt(\"Enter the password to join this room\");\r\n    const confirmation = await axios.post(\"/joinroom\", {\r\n      password,\r\n      roomID,\r\n      name: this.props.name\r\n    });\r\n    if (!confirmation.data.canJoin || password == null)\r\n      document.location.href = \"/\";\r\n    else {\r\n      const { color } = confirmation.data;\r\n      this.setState({ ownColor: color });\r\n      this.props.socket.emit(\"joiningRoom\", { roomID });\r\n    }\r\n\r\n    this.registerSocketListeners();\r\n    this.newGame();\r\n  }\r\n\r\n  registerSocketListeners = () => {\r\n    this.props.socket.on(\"state\", data => {\r\n      this.setState({ units: data.units, currTurn: data.currTurn });\r\n      this.unHighlightAll();\r\n    });\r\n    this.props.socket.on(\"gameOver\", data => {\r\n      const { won } = data;\r\n      if (won == this.state.ownColor) {\r\n        alert(\"You win :)\");\r\n      } else {\r\n        alert(\"You lose :(\");\r\n      }\r\n      document.location.href = \"/\";\r\n    });\r\n    this.props.socket.on(\"exit\", data => {\r\n      if (data.message == \"Player disconnected\") {\r\n        alert(\"Apologies. The other player disconnected.\");\r\n        document.location.href = \"/\";\r\n      }\r\n    });\r\n  };\r\n\r\n  newGame = () => {\r\n    this.props.socket.emit(\"getState\", { roomID: this.state.roomID });\r\n  };\r\n\r\n  unHighlightAllExcept = (i, j) => {\r\n    // All boxes except i,j are unhighlighted\r\n    let newArr = Array(8)\r\n      .fill()\r\n      .map(() => Array(8).fill(false));\r\n    newArr[i][j] = true;\r\n    return newArr;\r\n  };\r\n\r\n  unHighlightAll = () => {\r\n    let newArr = Array(8)\r\n      .fill()\r\n      .map(() => Array(8).fill(false));\r\n    this.setState({ highlighted: newArr });\r\n  };\r\n\r\n  handleSelect = (i, j) => {\r\n    let highlightedClone = arrayClone(this.state.highlighted);\r\n    let boxSelected = arrayClone(this.state.boxSelected);\r\n    if (boxSelected.length === 0) boxSelected.push([i, j]);\r\n    if (boxSelected.length > 1) boxSelected.shift();\r\n    boxSelected.push([i, j]);\r\n    this.setState({ boxSelected });\r\n    highlightedClone = this.unHighlightAllExcept(i, j);\r\n    // Clicking any other box removes all prior highlighting.\r\n    const unit = this.state.units[i][j].split(\"_\")[1];\r\n    this.setState({ highlighted: highlightedClone, boxSelected: boxSelected });\r\n\r\n    switch (unit) {\r\n      case \"Pawn\":\r\n        this.pawn(i, j, highlightedClone);\r\n        break;\r\n      case \"Rook\":\r\n        this.rook(i, j, highlightedClone);\r\n        break;\r\n      case \"Knight\":\r\n        this.knight(i, j, highlightedClone);\r\n        break;\r\n      case \"Bishop\":\r\n        this.bishop(i, j, highlightedClone);\r\n        break;\r\n      case \"Queen\":\r\n        this.queen(i, j, highlightedClone);\r\n        break;\r\n      case \"King\":\r\n        this.king(i, j, highlightedClone);\r\n        break;\r\n    }\r\n  };\r\n\r\n  moveUnit = (i, j) => {\r\n    let boxSelected = arrayClone(this.state.boxSelected);\r\n    let unitsClone = arrayClone(this.state.units);\r\n\r\n    const prevX = parseInt(boxSelected[1][0]);\r\n    const prevY = parseInt(boxSelected[1][1]);\r\n\r\n    // If the box being clicked is the same as the previously clicked one\r\n    if (i === prevX && j === prevY) return;\r\n    if (boxSelected.length > 1) boxSelected.shift();\r\n    boxSelected.push([i, j]);\r\n    const unit = unitsClone[prevX][prevY]; // The box previously clicked\r\n    const unitOnBox = unitsClone[i][j]; // the box clicked (i, j)\r\n    if (unitOnBox !== null) {\r\n      if (unitOnBox.split(\"_\")[1] === \"King\") {\r\n        this.newGame();\r\n        this.setState({\r\n          highlighted: Array(8)\r\n            .fill()\r\n            .map(() => Array(8).fill(false))\r\n        });\r\n        return;\r\n      }\r\n    }\r\n\r\n    let highlightedClone = Array(8)\r\n      .fill()\r\n      .map(() => Array(8).fill(false));\r\n\r\n    unitsClone[i][j] = unit;\r\n    unitsClone[prevX][prevY] = null;\r\n    this.setState({\r\n      units: unitsClone,\r\n      boxSelected,\r\n      highlighted: highlightedClone\r\n    });\r\n  };\r\n\r\n  pawn = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      // if turn is white, pawns move above.\r\n      if (unitsClone[i - 1][j] === null) {\r\n        highlightedClone[i - 1][j] = true; //Highlighting the box below the pawn.\r\n        if (i === 6 && unitsClone[i - 2][j] === null)\r\n          highlightedClone[i - 2][j] = true;\r\n      }\r\n\r\n      if (j > 0) {\r\n        let left = unitsClone[i - 1][j - 1];\r\n        if (left !== null) {\r\n          let leftUnitColor = left.split(\"_\")[0];\r\n          if (leftUnitColor === \"B\") highlightedClone[i - 1][j - 1] = true;\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        let right = unitsClone[i - 1][j + 1];\r\n        if (right !== null) {\r\n          let rightUnitColor = right.split(\"_\")[0];\r\n          if (rightUnitColor === \"B\") highlightedClone[i - 1][j + 1] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (turn === \"B\") {\r\n      // if turn is black, pawns move below.\r\n      if (unitsClone[i + 1][j] === null) {\r\n        highlightedClone[i + 1][j] = true; //Highlighting the box above the pawn.\r\n        if (i === 1 && unitsClone[i + 2][j] === null)\r\n          highlightedClone[i + 2][j] = true;\r\n      }\r\n\r\n      if (j > 0) {\r\n        let left = unitsClone[i + 1][j - 1];\r\n        if (left !== null) {\r\n          let leftUnitColor = left.split(\"_\")[0];\r\n          if (leftUnitColor === \"W\") highlightedClone[i + 1][j - 1] = true;\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        let right = unitsClone[i + 1][j + 1];\r\n        if (right !== null) {\r\n          let rightUnitColor = right.split(\"_\")[0];\r\n          if (rightUnitColor === \"W\") highlightedClone[i + 1][j + 1] = true;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ highlighted: highlightedClone });\r\n  };\r\n\r\n  rook = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      if (i > 0) {\r\n        for (let r = i - 1; r >= 0; r--) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (i < 7) {\r\n        for (let r = i + 1; r <= 7; r++) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j > 0) {\r\n        for (let r = j - 1; r >= 0; r--) {\r\n          //For boxes left to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        for (let r = j + 1; r <= 7; r++) {\r\n          //For boxes right to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (i > 0) {\r\n        for (let r = i - 1; r >= 0; r--) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (i < 7) {\r\n        for (let r = i + 1; r <= 7; r++) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j > 0) {\r\n        for (let r = j - 1; r >= 0; r--) {\r\n          //For boxes left to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        for (let r = j + 1; r <= 7; r++) {\r\n          //For boxes right to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ highlighted: highlightedClone });\r\n  };\r\n\r\n  knight = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      // First of all, ahead.\r\n      if (i >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i - 2][j - 1];\r\n          if (left === null) highlightedClone[i - 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i - 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i - 2][j + 1];\r\n          if (right === null) highlightedClone[i - 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i - 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i + 2][j - 1];\r\n          if (left === null) highlightedClone[i + 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i + 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i + 2][j + 1];\r\n          if (right === null) highlightedClone[i + 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i + 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j - 2];\r\n          if (left === null) highlightedClone[i - 1][j - 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i - 1][j - 2] = true;\r\n          }\r\n        }\r\n        if (i <= 6) {\r\n          let right = unitsClone[i + 1][j - 2];\r\n          if (right === null) highlightedClone[i + 1][j - 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i + 1][j - 2] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j + 2];\r\n          if (left === null) highlightedClone[i - 1][j + 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i - 1][j + 2] = true;\r\n          }\r\n        }\r\n        if (i <= 6) {\r\n          let right = unitsClone[i + 1][j + 2];\r\n          if (right === null) highlightedClone[i + 1][j + 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i + 1][j + 2] = true;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // First of all, ahead.\r\n      if (i >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i - 2][j - 1];\r\n          if (left === null) highlightedClone[i - 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i - 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i - 2][j + 1];\r\n          if (right === null) highlightedClone[i - 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i - 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i + 2][j - 1];\r\n          if (left === null) highlightedClone[i + 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i + 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i + 2][j + 1];\r\n          if (right === null) highlightedClone[i + 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i + 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j - 2];\r\n          if (left === null) highlightedClone[i - 1][j - 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i - 1][j - 2] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i + 1][j - 2];\r\n          if (right === null) highlightedClone[i + 1][j - 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i + 1][j - 2] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j + 2];\r\n          if (left === null) highlightedClone[i - 1][j + 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i - 1][j + 2] = true;\r\n          }\r\n        }\r\n        if (i <= 6) {\r\n          let right = unitsClone[i + 1][j + 2];\r\n          if (right === null) highlightedClone[i + 1][j + 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i + 1][j + 2] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  bishop = (i, j, highlightedClone) => {\r\n    //bishop can move in 4 directions.\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      for (let r = 1; r < 8; r++) {\r\n        // right top.\r\n        if (i - r >= 0 && j + r <= 7) {\r\n          let unit = unitsClone[i - r][j + r];\r\n          if (unit === null) highlightedClone[i - r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i - r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // right bottom.\r\n        if (i + r <= 7 && j + r <= 7) {\r\n          let unit = unitsClone[i + r][j + r];\r\n          if (unit === null) highlightedClone[i + r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i + r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left bottom.\r\n        if (i + r <= 7 && j - r >= 0) {\r\n          let unit = unitsClone[i + r][j - r];\r\n          if (unit === null) highlightedClone[i + r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i + r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left top.\r\n        if (i - r >= 0 && j - r >= 0) {\r\n          let unit = unitsClone[i - r][j - r];\r\n          if (unit === null) highlightedClone[i - r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i - r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let r = 1; r < 8; r++) {\r\n        // right top.\r\n        if (i - r >= 0 && j + r <= 7) {\r\n          let unit = unitsClone[i - r][j + r];\r\n          if (unit === null) highlightedClone[i - r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i - r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // right bottom.\r\n        if (i + r <= 7 && j + r <= 7) {\r\n          let unit = unitsClone[i + r][j + r];\r\n          if (unit === null) highlightedClone[i + r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i + r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left bottom.\r\n        if (i + r <= 7 && j - r >= 0) {\r\n          let unit = unitsClone[i + r][j - r];\r\n          if (unit === null) highlightedClone[i + r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i + r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left top.\r\n        if (i - r >= 0 && j - r >= 0) {\r\n          let unit = unitsClone[i - r][j - r];\r\n          if (unit === null) highlightedClone[i - r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i - r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ highlighted: highlightedClone });\r\n  };\r\n\r\n  king = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      if (i >= 1) {\r\n        let unit = unitsClone[i - 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i - 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i - 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i - 1][j - 1];\r\n          if (unit === null) highlightedClone[i - 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i - 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i - 1][j + 1];\r\n          if (unit === null) highlightedClone[i - 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i - 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 6) {\r\n        let unit = unitsClone[i + 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i + 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i + 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i + 1][j - 1];\r\n          if (unit === null) highlightedClone[i + 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i + 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i + 1][j + 1];\r\n          if (unit === null) highlightedClone[i + 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i + 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 1) {\r\n        let unit = unitsClone[i][j - 1];\r\n        if (unit === null) highlightedClone[i][j - 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i][j - 1] = true;\r\n        }\r\n      }\r\n\r\n      if (j <= 6) {\r\n        let unit = unitsClone[i][j + 1];\r\n        if (unit === null) highlightedClone[i][j + 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i][j + 1] = true;\r\n        }\r\n      }\r\n    } else {\r\n      if (i >= 1) {\r\n        let unit = unitsClone[i - 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i - 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i - 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i - 1][j - 1];\r\n          if (unit === null) highlightedClone[i - 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i - 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i - 1][j + 1];\r\n          if (unit === null) highlightedClone[i - 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i - 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 6) {\r\n        let unit = unitsClone[i + 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i + 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i + 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i + 1][j - 1];\r\n          if (unit === null) highlightedClone[i + 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i + 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i + 1][j + 1];\r\n          if (unit === null) highlightedClone[i + 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i + 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 1) {\r\n        let unit = unitsClone[i][j - 1];\r\n        if (unit === null) highlightedClone[i][j - 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i][j - 1] = true;\r\n        }\r\n      }\r\n\r\n      if (j <= 6) {\r\n        let unit = unitsClone[i][j + 1];\r\n        if (unit === null) highlightedClone[i][j + 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i][j + 1] = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  queen = (i, j, highlightedClone) => {\r\n    this.rook(i, j, highlightedClone);\r\n    this.bishop(i, j, highlightedClone);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        units={this.state.units}\r\n        currTurn={this.state.currTurn}\r\n        key=\"Grid\"\r\n        handleSelect={this.handleSelect}\r\n        highlighted={this.state.highlighted}\r\n        moveUnit={this.moveUnit}\r\n        ownColor={this.state.ownColor}\r\n        boxSelected={this.state.boxSelected}\r\n        socket={this.props.socket}\r\n        roomID={this.state.roomID}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction arrayClone(arr) {\r\n  return JSON.parse(JSON.stringify(arr));\r\n}\r\n\r\nexport default withRouter(Main);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport io from \"socket.io-client\";\r\nimport axios from \"axios\";\r\n\r\nimport Main from \"./Main\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nclass Index extends React.Component {\r\n  state = {\r\n    password: \"\",\r\n    name: \"\",\r\n    rooms: []\r\n  };\r\n  interval = \"\";\r\n  socket = io(\"http://18.219.83.6:5000/\");\r\n\r\n  componentDidMount() {\r\n    // This is emitted on the server evey 2 seconds.\r\n    // It contains the list of all rooms currently created on the server.\r\n    this.socket.on(\"listOfRooms\", data => {\r\n      this.setState({ rooms: data });\r\n    });\r\n  }\r\n\r\n  generateRoom = async () => {\r\n    const res = await axios.post(\"/newgame\", {\r\n      name: this.state.name,\r\n      password: this.state.password\r\n    });\r\n    const { roomID } = res.data;\r\n\r\n    document.location.href = `/game/${roomID}`;\r\n  };\r\n  handleChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  joinRoom = room => {\r\n    console.log(this.state);\r\n    document.location.href = `/game/${room.roomId}`;\r\n  };\r\n\r\n  render() {\r\n    var tableList = [];\r\n    for (let i = 0; i < this.state.rooms.length; i++) {\r\n      const room = this.state.rooms[i];\r\n      tableList.push(\r\n        <tr>\r\n          <td>{room.players}</td>\r\n          <td>{room.player1.name}</td>\r\n          <td>{room.player2.name}</td>\r\n          <td>{room.passwordProtected ? \"Yes\" : \"No\"}</td>\r\n          <td>\r\n            {room.players < 2 ? (\r\n              <button onClick={() => this.joinRoom(room)}>\r\n                {\" \"}\r\n                {room.roomId}\r\n              </button>\r\n            ) : (\r\n              \"Can't. Room Full\"\r\n            )}\r\n          </td>\r\n        </tr>\r\n      );\r\n    }\r\n    return (\r\n      <Router>\r\n        <Route exact path=\"/\">\r\n          <div style={{ textAlign: \"center\", marginBottom: \"10px\" }}>\r\n            <div>\r\n              <h1 style={{ color: \"white\" }}>CHESS</h1>\r\n            </div>\r\n            <div>\r\n              <label style={{ color: \"white\", margin: \"10px\" }}>Name</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ margin: \"10px\" }}\r\n                onChange={e => {\r\n                  this.setState({ name: e.target.value });\r\n                }}\r\n                name=\"name\"\r\n                value={this.state.name}\r\n              ></input>\r\n\r\n              <label style={{ color: \"white\", margin: \"10px\" }}>Password</label>\r\n              <input\r\n                type=\"text\"\r\n                style={{ margin: \"10px\" }}\r\n                onChange={this.handleChange}\r\n                name=\"password\"\r\n                value={this.state.password}\r\n              ></input>\r\n              <br></br>\r\n              <button onClick={this.generateRoom}>Create Room</button>\r\n            </div>\r\n          </div>\r\n          <div\r\n            style={{\r\n              color: \"white\",\r\n              textAlign: \"center\"\r\n            }}\r\n          >\r\n            <h1>Rooms available:</h1>\r\n            <table align=\"center\" border=\"1\" style={{ width: \"50%\" }}>\r\n              <tr>\r\n                <th>Players</th>\r\n                <th>Player 1</th>\r\n                <th>Player 2</th>\r\n                <th>Password?</th>\r\n                <th>Join</th>\r\n              </tr>\r\n              {tableList}\r\n            </table>\r\n          </div>\r\n        </Route>\r\n        <Route path=\"/game/:id\">\r\n          <Main\r\n            socket={this.socket}\r\n            id\r\n            name={this.state.name}\r\n            generateRoom={this.generateRoom}\r\n          />\r\n        </Route>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(<Index />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}