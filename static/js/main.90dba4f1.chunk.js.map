{"version":3,"sources":["Box.js","Grid.js","Main.js","serviceWorker.js","index.js"],"names":["Box","handleClick","currTurn","_this","props","id","boxId","split","i","parseInt","j","value","units","highlighted","moveUnit","handleSelect","classes","this","color","react_default","a","createElement","className","onClick","Component","Grid","boxArr","push","src_Box","key","style","width","arrayClone","arr","JSON","parse","stringify","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","newGame","unitsArr","Array","fill","map","setState","unHighlight","newArr","highlightedClone","state","boxSelected","length","shift","unit","pawn","rook","knight","bishop","queen","king","unitsClone","prevX","prevY","unitOnBox","turn","left","right","r","console","log","boxesChanged","src_Grid","Boolean","window","location","hostname","match","ReactDOM","render","src_Main","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.90dba4f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Box extends Component {\r\n  handleClick = () => {\r\n    const currTurn = this.props.currTurn;\r\n    const id = this.props.boxId.split(\"\");\r\n    const i = parseInt(id[0]);\r\n    const j = parseInt(id[1]);\r\n    const value = this.props.units[i][j];\r\n    const highlighted = this.props.highlighted;\r\n    if (highlighted[i][j] === true) {\r\n      this.props.moveUnit(i, j);\r\n    } else if (value !== null) {\r\n      const color = this.props.units[i][j].split(\"_\")[0];\r\n      if (currTurn === color) {\r\n        this.props.handleSelect(i, j);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let classes = \"box\"; // Adding the name of the unit to the classes.\r\n    //Alternating black and white boxes\r\n    const boxId = this.props.boxId.split(\"\");\r\n    const i = parseInt(boxId[0]);\r\n    const j = parseInt(boxId[1]);\r\n    if ((i + j) % 2 === 0) {\r\n      classes += \" white\";\r\n    } else classes += \" black\";\r\n    // Alternating boxes ends here.\r\n\r\n    const value = this.props.units[i][j];\r\n    if (value !== null) {\r\n      var color = value.split(\"_\")[0]; //Color can be \"B\" or \"W\".\r\n      classes += \" \" + color;\r\n      const unit = value.split(\"_\")[1]; // unit is Bishop or Pawn or Queen..\r\n      classes += \" \" + unit;\r\n    }\r\n\r\n    if (this.props.highlighted[i][j]) {\r\n      // Checking if the box to be highlighted is friend or foe.\r\n      const currTurn = this.props.currTurn;\r\n      if (color === \"W\" && currTurn === \"B\") classes += \" highlightedKill\";\r\n      else if (color === \"B\" && currTurn === \"W\") classes += \" highlightedKill\";\r\n      else classes += \" highlighted\";\r\n      // If current turn matches the color of unit, it is friend.\r\n    }\r\n    return <div className={classes} onClick={this.handleClick} />;\r\n  }\r\n}\r\n\r\nexport default Box;\r\n","import React, { Component } from \"react\";\r\nimport Box from \"./Box.js\";\r\n\r\nclass Grid extends Component {\r\n  render() {\r\n    const turn = this.props.currTurn;\r\n    let classes = \"grid \";\r\n    classes += turn;\r\n    let boxArr = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      boxArr.push([]);\r\n      for (let j = 0; j < 8; j++) {\r\n        let boxId = i + \"\" + j;\r\n        boxArr[i].push(\r\n          <Box\r\n            units={this.props.units}\r\n            currTurn={this.props.currTurn}\r\n            key={boxId}\r\n            boxId={boxId}\r\n            handleSelect={this.props.handleSelect}\r\n            highlighted={this.props.highlighted}\r\n            moveUnit={this.props.moveUnit}\r\n          />\r\n        );\r\n      }\r\n    }\r\n    return (\r\n      <div className={classes} style={{ width: 720 }}>\r\n        {boxArr}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Grid;\r\n","import React, { Component } from \"react\";\r\nimport Grid from \"./Grid.js\";\r\n\r\nclass Main extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      units: Array(8)\r\n        .fill()\r\n        .map(() => Array(8).fill(null)),\r\n      highlighted: Array(8)\r\n        .fill()\r\n        .map(() => Array(8).fill(false)),\r\n      boxesChanged: [], //This array represents the boxes that are changed\r\n      currTurn: \"W\",\r\n      boxSelected: []\r\n    };\r\n  }\r\n\r\n  newGame = () => {\r\n    let unitsArr = Array(8)\r\n      .fill()\r\n      .map(() => Array(8).fill(null));\r\n\r\n    for (let i = 0; i < 8; i++) {\r\n      unitsArr[1][i] = \"B_Pawn\";\r\n      unitsArr[6][i] = \"W_Pawn\";\r\n    }\r\n\r\n    unitsArr[0][4] = \"B_King\";\r\n    unitsArr[0][0] = \"B_Rook\";\r\n    unitsArr[0][7] = \"B_Rook\";\r\n    unitsArr[0][1] = \"B_Knight\";\r\n    unitsArr[0][6] = \"B_Knight\";\r\n    unitsArr[0][2] = \"B_Bishop\";\r\n    unitsArr[0][5] = \"B_Bishop\";\r\n    unitsArr[0][3] = \"B_Queen\";\r\n    unitsArr[7][4] = \"W_King\";\r\n    unitsArr[7][0] = \"W_Rook\";\r\n    unitsArr[7][7] = \"W_Rook\";\r\n    unitsArr[7][1] = \"W_Knight\";\r\n    unitsArr[7][6] = \"W_Knight\";\r\n    unitsArr[7][2] = \"W_Bishop\";\r\n    unitsArr[7][5] = \"W_Bishop\";\r\n    unitsArr[7][3] = \"W_Queen\";\r\n    this.setState({ units: unitsArr });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.newGame();\r\n  }\r\n\r\n  unHighlight = (i, j) => {\r\n    // All boxes except i,j are unhighlighted\r\n    let newArr = Array(8)\r\n      .fill()\r\n      .map(() => Array(8).fill(false));\r\n    newArr[i][j] = true;\r\n    return newArr;\r\n  };\r\n\r\n  handleSelect = (i, j) => {\r\n    let highlightedClone = arrayClone(this.state.highlighted);\r\n    let boxSelected = arrayClone(this.state.boxSelected);\r\n    if (boxSelected.length === 0) boxSelected.push([i, j]);\r\n    if (boxSelected.length > 1) boxSelected.shift();\r\n    boxSelected.push([i, j]);\r\n    this.setState({ boxSelected });\r\n    highlightedClone = this.unHighlight(i, j);\r\n    // Clicking any other box removes all prior highlighting.\r\n    const unit = this.state.units[i][j].split(\"_\")[1];\r\n    this.setState({ highlighted: highlightedClone, boxSelected: boxSelected });\r\n\r\n    switch (unit) {\r\n      case \"Pawn\":\r\n        this.pawn(i, j, highlightedClone);\r\n        break;\r\n      case \"Rook\":\r\n        this.rook(i, j, highlightedClone);\r\n        break;\r\n      case \"Knight\":\r\n        this.knight(i, j, highlightedClone);\r\n        break;\r\n      case \"Bishop\":\r\n        this.bishop(i, j, highlightedClone);\r\n        break;\r\n      case \"Queen\":\r\n        this.queen(i, j, highlightedClone);\r\n        break;\r\n      case \"King\":\r\n        this.king(i, j, highlightedClone);\r\n        break;\r\n    }\r\n  };\r\n\r\n  moveUnit = (i, j) => {\r\n    let highlightedClone = this.unHighlight(i, j);\r\n    highlightedClone[i][j] = false;\r\n    let boxSelected = arrayClone(this.state.boxSelected);\r\n    let unitsClone = arrayClone(this.state.units);\r\n    const prevX = parseInt(boxSelected[1][0]);\r\n    const prevY = parseInt(boxSelected[1][1]);\r\n    if (i === prevX && j === prevY) return;\r\n    if (boxSelected.length > 1) boxSelected.shift();\r\n    boxSelected.push([i, j]);\r\n    const unit = unitsClone[prevX][prevY];\r\n    const unitOnBox = unitsClone[i][j];\r\n    if (unitOnBox !== null) {\r\n      if (unitOnBox.split(\"_\")[1] === \"King\") {\r\n        this.newGame();\r\n        this.setState({\r\n          highlighted: Array(8)\r\n            .fill()\r\n            .map(() => Array(8).fill(false))\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    unitsClone[i][j] = unit;\r\n    unitsClone[prevX][prevY] = null;\r\n    let turn = this.state.currTurn;\r\n    if (turn === \"W\") turn = \"B\";\r\n    else turn = \"W\";\r\n    this.setState({\r\n      units: unitsClone,\r\n      currTurn: turn,\r\n      boxSelected,\r\n      highlighted: highlightedClone\r\n    });\r\n  };\r\n\r\n  pawn = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      // if turn is white, pawns move above.\r\n      if (unitsClone[i - 1][j] === null) {\r\n        highlightedClone[i - 1][j] = true; //Highlighting the box below the pawn.\r\n        if (i === 6 && unitsClone[i - 2][j] === null)\r\n          highlightedClone[i - 2][j] = true;\r\n      }\r\n\r\n      if (j > 0) {\r\n        let left = unitsClone[i - 1][j - 1];\r\n        if (left !== null) {\r\n          let leftUnitColor = left.split(\"_\")[0];\r\n          if (leftUnitColor === \"B\") highlightedClone[i - 1][j - 1] = true;\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        let right = unitsClone[i - 1][j + 1];\r\n        if (right !== null) {\r\n          let rightUnitColor = right.split(\"_\")[0];\r\n          if (rightUnitColor === \"B\") highlightedClone[i - 1][j + 1] = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (turn === \"B\") {\r\n      // if turn is black, pawns move below.\r\n      if (unitsClone[i + 1][j] === null) {\r\n        highlightedClone[i + 1][j] = true; //Highlighting the box above the pawn.\r\n        if (i === 1 && unitsClone[i + 2][j] === null)\r\n          highlightedClone[i + 2][j] = true;\r\n      }\r\n\r\n      if (j > 0) {\r\n        let left = unitsClone[i + 1][j - 1];\r\n        if (left !== null) {\r\n          let leftUnitColor = left.split(\"_\")[0];\r\n          if (leftUnitColor === \"W\") highlightedClone[i + 1][j - 1] = true;\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        let right = unitsClone[i + 1][j + 1];\r\n        if (right !== null) {\r\n          let rightUnitColor = right.split(\"_\")[0];\r\n          if (rightUnitColor === \"W\") highlightedClone[i + 1][j + 1] = true;\r\n        }\r\n      }\r\n    }\r\n    this.setState({ highlighted: highlightedClone });\r\n  };\r\n\r\n  rook = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      if (i > 0) {\r\n        for (let r = i - 1; r >= 0; r--) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (i < 7) {\r\n        for (let r = i + 1; r <= 7; r++) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j > 0) {\r\n        for (let r = j - 1; r >= 0; r--) {\r\n          //For boxes left to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        for (let r = j + 1; r <= 7; r++) {\r\n          //For boxes right to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (i > 0) {\r\n        for (let r = i - 1; r >= 0; r--) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (i < 7) {\r\n        for (let r = i + 1; r <= 7; r++) {\r\n          //For boxes above the rook.\r\n          let unit = unitsClone[r][j];\r\n          if (unit === null) highlightedClone[r][j] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[r][j] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j > 0) {\r\n        for (let r = j - 1; r >= 0; r--) {\r\n          //For boxes left to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n      if (j < 7) {\r\n        for (let r = j + 1; r <= 7; r++) {\r\n          //For boxes right to the rook.\r\n          let unit = unitsClone[i][r];\r\n          if (unit === null) highlightedClone[i][r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              //unit[0] is the color of the unit.\r\n              highlightedClone[i][r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.setState({ highlighted: highlightedClone });\r\n  };\r\n\r\n  knight = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      // First of all, ahead.\r\n      if (i >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i - 2][j - 1];\r\n          if (left === null) highlightedClone[i - 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i - 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i - 2][j + 1];\r\n          if (right === null) highlightedClone[i - 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i - 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i + 2][j - 1];\r\n          if (left === null) highlightedClone[i + 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i + 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i + 2][j + 1];\r\n          if (right === null) highlightedClone[i + 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i + 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j - 2];\r\n          if (left === null) highlightedClone[i - 1][j - 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i - 1][j - 2] = true;\r\n          }\r\n        }\r\n        if (i <= 6) {\r\n          let right = unitsClone[i + 1][j - 2];\r\n          if (right === null) highlightedClone[i + 1][j - 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i + 1][j - 2] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j + 2];\r\n          if (left === null) highlightedClone[i - 1][j + 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"B\") highlightedClone[i - 1][j + 2] = true;\r\n          }\r\n        }\r\n        if (i <= 6) {\r\n          let right = unitsClone[i + 1][j + 2];\r\n          if (right === null) highlightedClone[i + 1][j + 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"B\") highlightedClone[i + 1][j + 2] = true;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // First of all, ahead.\r\n      if (i >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i - 2][j - 1];\r\n          if (left === null) highlightedClone[i - 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i - 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i - 2][j + 1];\r\n          if (right === null) highlightedClone[i - 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i - 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (j >= 1) {\r\n          let left = unitsClone[i + 2][j - 1];\r\n          if (left === null) highlightedClone[i + 2][j - 1] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i + 2][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i + 2][j + 1];\r\n          if (right === null) highlightedClone[i + 2][j + 1] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i + 2][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 2) {\r\n        //i has to be greater than 1 if the knight has to move ahead. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j - 2];\r\n          if (left === null) highlightedClone[i - 1][j - 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i - 1][j - 2] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let right = unitsClone[i + 1][j - 2];\r\n          if (right === null) highlightedClone[i + 1][j - 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i + 1][j - 2] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j <= 5) {\r\n        //i has to be less than 6 if the knight has to move below. because it moves 2 straight\r\n        // and 1 in the other axis.\r\n        if (i >= 1) {\r\n          let left = unitsClone[i - 1][j + 2];\r\n          if (left === null) highlightedClone[i - 1][j + 2] = true;\r\n          else {\r\n            left = left.split(\"_\");\r\n            if (left[0] === \"W\") highlightedClone[i - 1][j + 2] = true;\r\n          }\r\n        }\r\n        if (i <= 6) {\r\n          let right = unitsClone[i + 1][j + 2];\r\n          if (right === null) highlightedClone[i + 1][j + 2] = true;\r\n          else {\r\n            right = right.split(\"_\");\r\n            if (right[0] === \"W\") highlightedClone[i + 1][j + 2] = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  bishop = (i, j, highlightedClone) => {\r\n    //bishop can move in 4 directions.\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      for (let r = 1; r < 8; r++) {\r\n        // right top.\r\n        if (i - r >= 0 && j + r <= 7) {\r\n          let unit = unitsClone[i - r][j + r];\r\n          if (unit === null) highlightedClone[i - r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i - r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // right bottom.\r\n        if (i + r <= 7 && j + r <= 7) {\r\n          let unit = unitsClone[i + r][j + r];\r\n          if (unit === null) highlightedClone[i + r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i + r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left bottom.\r\n        if (i + r <= 7 && j - r >= 0) {\r\n          let unit = unitsClone[i + r][j - r];\r\n          if (unit === null) highlightedClone[i + r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i + r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left top.\r\n        if (i - r >= 0 && j - r >= 0) {\r\n          let unit = unitsClone[i - r][j - r];\r\n          if (unit === null) highlightedClone[i - r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") {\r\n              highlightedClone[i - r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      for (let r = 1; r < 8; r++) {\r\n        // right top.\r\n        if (i - r >= 0 && j + r <= 7) {\r\n          let unit = unitsClone[i - r][j + r];\r\n          if (unit === null) highlightedClone[i - r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i - r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // right bottom.\r\n        if (i + r <= 7 && j + r <= 7) {\r\n          let unit = unitsClone[i + r][j + r];\r\n          if (unit === null) highlightedClone[i + r][j + r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i + r][j + r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left bottom.\r\n        if (i + r <= 7 && j - r >= 0) {\r\n          let unit = unitsClone[i + r][j - r];\r\n          if (unit === null) highlightedClone[i + r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i + r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n\r\n      for (let r = 1; r < 8; r++) {\r\n        // left top.\r\n        if (i - r >= 0 && j - r >= 0) {\r\n          let unit = unitsClone[i - r][j - r];\r\n          if (unit === null) highlightedClone[i - r][j - r] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") {\r\n              highlightedClone[i - r][j - r] = true;\r\n              break;\r\n            } else break;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.setState({ highlighted: highlightedClone });\r\n  };\r\n\r\n  king = (i, j, highlightedClone) => {\r\n    const unitsClone = arrayClone(this.state.units);\r\n    const turn = this.state.currTurn;\r\n    if (turn === \"W\") {\r\n      if (i >= 1) {\r\n        let unit = unitsClone[i - 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i - 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i - 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i - 1][j - 1];\r\n          if (unit === null) highlightedClone[i - 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i - 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i - 1][j + 1];\r\n          if (unit === null) highlightedClone[i - 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i - 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 6) {\r\n        let unit = unitsClone[i + 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i + 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i + 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i + 1][j - 1];\r\n          if (unit === null) highlightedClone[i + 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i + 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i + 1][j + 1];\r\n          if (unit === null) highlightedClone[i + 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"B\") highlightedClone[i + 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 1) {\r\n        let unit = unitsClone[i][j - 1];\r\n        if (unit === null) highlightedClone[i][j - 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i][j - 1] = true;\r\n        }\r\n      }\r\n\r\n      if (j <= 6) {\r\n        let unit = unitsClone[i][j + 1];\r\n        if (unit === null) highlightedClone[i][j + 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"B\") highlightedClone[i][j + 1] = true;\r\n        }\r\n      }\r\n    } else {\r\n      if (i >= 1) {\r\n        let unit = unitsClone[i - 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i - 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i - 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i - 1][j - 1];\r\n          if (unit === null) highlightedClone[i - 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i - 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i - 1][j + 1];\r\n          if (unit === null) highlightedClone[i - 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i - 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (i <= 6) {\r\n        let unit = unitsClone[i + 1][j];\r\n        console.log(unit);\r\n        if (unit === null) highlightedClone[i + 1][j] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i + 1][j] = true;\r\n        }\r\n\r\n        if (j >= 1) {\r\n          let unit = unitsClone[i + 1][j - 1];\r\n          if (unit === null) highlightedClone[i + 1][j - 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i + 1][j - 1] = true;\r\n          }\r\n        }\r\n        if (j <= 6) {\r\n          let unit = unitsClone[i + 1][j + 1];\r\n          if (unit === null) highlightedClone[i + 1][j + 1] = true;\r\n          else {\r\n            unit = unit.split(\"_\");\r\n            if (unit[0] === \"W\") highlightedClone[i + 1][j + 1] = true;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (j >= 1) {\r\n        let unit = unitsClone[i][j - 1];\r\n        if (unit === null) highlightedClone[i][j - 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i][j - 1] = true;\r\n        }\r\n      }\r\n\r\n      if (j <= 6) {\r\n        let unit = unitsClone[i][j + 1];\r\n        if (unit === null) highlightedClone[i][j + 1] = true;\r\n        else {\r\n          unit = unit.split(\"_\");\r\n          if (unit[0] === \"W\") highlightedClone[i][j + 1] = true;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  queen = (i, j, highlightedClone) => {\r\n    this.rook(i, j, highlightedClone);\r\n    this.bishop(i, j, highlightedClone);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid\r\n        units={this.state.units}\r\n        currTurn={this.state.currTurn}\r\n        key=\"Grid\"\r\n        handleSelect={this.handleSelect}\r\n        highlighted={this.state.highlighted}\r\n        moveUnit={this.moveUnit}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nfunction arrayClone(arr) {\r\n  return JSON.parse(JSON.stringify(arr));\r\n}\r\n\r\nexport default Main;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Main from \"./Main\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<Main />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}